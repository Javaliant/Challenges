/* Author: Luigi Vincent
The Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89.

Consider a Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
*/

import java.util.ArrayList;

public class Euler2 {
    public static void main(String[] args) {
        final long START = System.nanoTime(),
            MAX_NUM = 4000000L;
        long result = 0L;

        ArrayList<Long> sequence = new ArrayList<Long>() {
            { add(1L); add(2L); }
        };

        int i = 0;
        long nextTerm = sequence.get(i++) + sequence.get(i);
        while (nextTerm <= MAX_NUM) {
            sequence.add(nextTerm);
            nextTerm = sequence.get(i++) + sequence.get(i);
        }
        
        /* Leveraging the absence of consecutive even numbers
        and the fact that Odd + Even is Odd, and Odd + Odd is even,
        retrieve every third term after an even term until no longer possible
        */
        int j = 1;
        while (j <= i) {
            result += sequence.get(j);
            j += 3;
        }

        final long END = System.nanoTime();

        System.out.print("Result: " + result +
        	".\nTime used for calculation in nanoseconds: " +
            (END - START) + "."
        );
    }
}
