/* Author: Luigi Vincent
The Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89.

Consider a Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
*/

import java.util.ArrayList;

public class Euler2 {
    public static void main(String[] args) {
        final long START = System.nanoTime(),
            MAX_NUM = 4000000L;
        long result = sumEvenFibNums(MAX_NUM);     

        final long END = System.nanoTime();

        System.out.print("Result: " + result +
            ".\nTime used for calculation in nanoseconds: " +
            (END - START) + "."
        );
    }

    /* Leveraging the absence of consecutive even numbers
    and the fact that Odd + Even is Odd, and Odd + Odd is even,
    this method retrieves and sums every third term, i.e the evens.
    */
    public static long sumEvenFibNums(long limit) {
        long evenSum = 0,
            priorPrecedingOdd,
            precedingOdd = 1,
            even = 2;

        while (even <= limit) {
            evenSum += even;
            priorPrecedingOdd = even + precedingOdd;
            precedingOdd = priorPrecedingOdd + even;
            even = precedingOdd + priorPrecedingOdd;
        }

        return evenSum;
    }   
}
